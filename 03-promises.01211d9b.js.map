{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,QAAS,IACTC,cAAc,IAGhB,MAAMC,EAAM,CACVC,aAAcC,SAASC,cAAc,kBACrCC,YAAaF,SAASC,cAAc,iBACpCE,cAAeH,SAASC,cAAc,mBACtCG,YAAaJ,SAASC,cAAc,WAgCtC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEUI,EAAJ,uBAAqBN,EAAY,QAASC,OAGtCM,EAAL,IAAIE,MAAM,sBAAoBT,EAAY,QAASC,OAAW,GAEtEA,EAAM,G,CAtCbT,EAAIM,YAAYY,iBAAiB,SAcjC,SAA8BC,GAC5BA,EAAEC,iBAwCyBC,EAb7B,SAA2BC,EAAQb,EAAOc,GACxC,MAAMF,EAAQ,GACdZ,EAAQe,OAAOf,GACfc,EAAOC,OAAOD,GAEd,IAAK,IAAIE,EAAI,EAAGA,EAAIH,EAAQG,IAC1BJ,EAAMK,KAAKnB,EAAckB,EAAGhB,IAC5BA,GAASc,EAGX,OAAOF,C,CAnCWM,CAChB3B,EAAIK,cAAcuB,MAClB5B,EAAIC,aAAa2B,MACjB5B,EAAII,YAAYwB,OAoClBP,EAAMQ,KAAIC,GACRA,EACGC,MAAKH,GAASjC,EAAAF,GAASG,OAAOoC,QAAQJ,KACtCK,OAAMC,GAASvC,EAAAF,GAASG,OAAOuC,QAAQD,EAAME,aAJpD,IAA6Bf,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  timeout: 4000,\n  clickToClose: true,\n});\n\nconst rfs = {\n  inputDelayEl: document.querySelector('[name=\"delay\"]'),\n  inputStepEl: document.querySelector('[name=\"step\"]'),\n  inputAmountEl: document.querySelector('[name=\"amount\"]'),\n  btnSubmitEl: document.querySelector('button'),\n};\n\n// rfs.inputDelayEl.addEventListener('input', onDelayInputHandler);\n// rfs.inputStepEl.addEventListener('input', onStepInputHandler);\n// rfs.inputAmountEl.addEventListener('input', onAmountInputHandler);\nrfs.btnSubmitEl.addEventListener('click', onSubmitClickHandler);\n\n// function onDelayInputHandler() {\n//   console.log(rfs.inputDelayEl.value);\n// }\n\n// function onStepInputHandler() {\n//   console.log(rfs.inputStepEl.value);\n// }\n\n// function onAmountInputHandler() {\n//   console.log(rfs.inputAmountEl.value);\n// }\n\nfunction onSubmitClickHandler(e) {\n  e.preventDefault();\n\n  const tempValue = promiseArrayMaker(\n    rfs.inputAmountEl.value,\n    rfs.inputDelayEl.value,\n    rfs.inputStepEl.value\n  );\n\n  promiseArrayHandler(tempValue);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // эта функция на +\n        resolve(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n      } else {\n        // эта функция на -\n        reject(new Error(`❌ Rejected promise ${position + 1} in ${delay}ms`));\n      }\n    }, delay);\n  });\n}\n\nfunction promiseArrayMaker(amount, delay, step) {\n  const array = [];\n  delay = Number(delay);\n  step = Number(step);\n\n  for (let i = 0; i < amount; i++) {\n    array.push(createPromise(i, delay));\n    delay += step;\n  }\n\n  return array;\n}\n\nfunction promiseArrayHandler(array) {\n  array.map(el =>\n    el\n      .then(value => Notiflix.Notify.success(value))\n      .catch(error => Notiflix.Notify.failure(error.message))\n  );\n}\n\n// const p = new Promise((resolve, reject) => reject(new Error('сори, холостой пиу')));\n// const p = new Promise((yes, reject) => yes('дырка в мишени'));\n// p.then(v => console.log(v)).catch(e => console.log(e.message));\n// console.log('obj', p);\n"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","timeout","clickToClose","$47d4ff9957288465$var$rfs","inputDelayEl","document","querySelector","inputStepEl","inputAmountEl","btnSubmitEl","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Error","addEventListener","e","preventDefault","array","amount","step","Number","i","push","$47d4ff9957288465$var$promiseArrayMaker","value","map","el","then","success","catch","error","failure","message"],"version":3,"file":"03-promises.01211d9b.js.map"}